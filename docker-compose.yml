version: '3.8'

services:
  server:
    build: ./server
    container_name: websocket-server
    restart: unless-stopped
    environment:
      - MONGODB_URI=mongodb+srv://zildirayalfirli:Zildiray123@warningsystem.eextqwr.mongodb.net/?retryWrites=true&w=majority&appName=WarningSystem
      - PORT=9000
    ports:
      - "9000:9000"
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    healthcheck:
      test: ["CMD-SHELL", "lsof -i :9000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  client:
    build: ./client
    container_name: websocket-client
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    depends_on:
      - server
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  nginx:
    image: nginx:latest
    container_name: websocket-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    depends_on:
      server:
        condition: service_healthy
      client:
        condition: service_healthy

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: websocket-server-cadvisor
    restart: unless-stopped
    ports:
      - "8182:8080"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
    devices:
      - /dev/kmsg:/dev/kmsg
    depends_on:
      - server

  node_exporter:
    image: prom/node-exporter:latest
    container_name: websocket-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/hostname:ro
      - /etc/os-release:/etc/os-release:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/overlay2|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/image)($$|/)'

  prometheus:
    image: prom/prometheus:latest
    container_name: websocket-server-prometheus
    restart: unless-stopped
    ports:
      - "9191:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - cadvisor
      - node_exporter

  grafana:
    image: grafana/grafana:latest
    container_name: websocket-server-grafana
    restart: unless-stopped
    user: "0"
    ports:
      - "3100:3000"
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/data:/var/lib/grafana
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    depends_on:
      - prometheus